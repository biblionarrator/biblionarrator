<nav class="navbar navbar-inverse navbar-fixed-bottom">
    <div id="controlbar" class="navbar-inner">
        <div class="container-fluid">
            <ul class="nav">
                <li><a href="#" type="submit" id="saveField" form="fieldform">Save</a></li>
                <li><a href="#" id="delField">Delete</a></li>
            </ul>
        </div>
    </div>
</nav>
<div id="content" class="container-fluid">
    <div class="row-fluid">
        <div class="span2 pull-left">
            <a id="add-field" class="btn btn-small jstree-draggable" href="/admin/fields/new"><i class="icon-hand-down"></i> Add field</a>
            <div id="tree">
                <ul>
                    {{#each hierarchy}}
                    {{> fieldhierarchy}}
                    {{/each}}
                </ul>
            </div>
        </div>
        <div id="fieldeditor" class="span10 pull-right">
        </div>
    </div>
</div>

{{#contentFor 'styles'}}
    <link href="/css/fields.css" media="all" type="text/css" rel="stylesheet">
{{/contentFor}}

{{#contentFor 'javascript'}}
<script type="text/javascript" src="/lib/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="/js/dataTables.fnReloadAjax.js"></script>
<script type="text/javascript" src="/js/dataTables.bootstrap-paging.js"></script>
<script type="text/javascript" src="/lib/js/jquery.jeditable.min.js"></script>
<script type="text/javascript" src="/js/admin-table.js"></script>
<script type="text/javascript" src="/lib/js/jstree/jquery.jstree.js"></script>
<script type="text/javascript" src="/js/styleEditor.js"></script>
<script type="text/javascript" src="/js/admin-tree.js"></script>
<script type="text/javascript">
var controlColumn = '<button class="btn btn-mini editStyle"><i class="icon-pencil"></i></button>';
var recordTypes = { 
    {{#each recordtypes}}
        '{{name}}': {{id}},
    {{/each}}
}; //'Book', 'Person', 'Organization', 'Stamp', 'Coin' ];
var treeCallbacks = {
    'move_node' : function(e, data) {
        /*$.ajax({
            url: '/fields/' + data.rslt.o[0].getAttribute('data-id'),
            type: "POST",
            dataType: "json",
            data: { 
                    'parent': data.rslt.np[0].getAttribute('data-id')
                  }
        });*/
    },
    'create' : function(e, data) {
        window.renderer.render({ }, 'field-editor', function(newEditor) {
            document.querySelector('#fieldeditor').innerHTML = newEditor;
            initializeStyleEditor();
            $('#field-label').text(data.rslt.name);
            $('#field-schema').val();
            $('#field-name').val(data.rslt.name.toLowerCase());
            $('#tree .selected').removeClass('selected');
            $(data.rslt.obj).children('a').addClass('selected');
            if (data.args[1] === 'inside') {
                $('#field-parent').val(data.rslt.parent[0].getAttribute('data-id'));
            } else {
                $('#field-parent').val('');
            }
            History.pushState({ 'event' : 'new' }, 'New field', '/admin/fields/new/new');
        });
    }
};

var resourcetype = 'field';

$(document).ready(function() {
    {{#if field}}
        $.ajax({
            url: '/fields/{{field.schema}}/{{field.name}}',
            accept: { json: 'application/json' },
            dataType: 'json',
        }).done(function (data) {
            showRecord(data);
        });
    {{/if}}
    $('#tree').on('click', 'a', null, function(ev) {
        ev.preventDefault();
        $('#tree .selected').removeClass('selected');
        $(this).addClass('selected');
        var fieldParent = $(this).parents('li').first().parents('li').first().attr('data-id');
        if (fieldParent === 'undefined') {
            fieldParent = '';
        }
        $.ajax({
            url: '/fields/' + $(this).attr('data-schema') + '/' + $(this).attr('data-name'),
            accept: { json: 'application/json' },
            dataType: 'json',
        }).done(function (data) {
            showRecord(data, fieldParent);
        });
    });
    $(document).on('change', '#field-name, #field-schema', null, function() {
        $('#heading').text($('#field-name').val() + ' (' + $('#field-schema').val() + ')');
        $('#saveField').addClass('field-changed');
    });
    initializeTree(treeCallbacks);
    $('#add-field').click(function() {
        $('#tree').jstree('create', null, 'last', 'New field');
        return false;
    });
    initializeStyleEditor();
    $('#delField').click(function() {
        $.ajax({
            url: '/fields/' + $('#field-schema').val() + '/' + $('#field-name').val(),
            type: "DELETE"
        }).done(function() {
            $('#fieldeditor').empty()
            initializeTree(treeCallbacks);
        });
        return false;
    });
    $('#saveField').click(function() {
        var data = { 
            'name': $('#field-name').val(),
            'schema': $('#field-schema').val(),
            'label': $('#field-label').text(),
            'description': $('#field-description').val(),
            'sortable': $('#field-sortable').is(':checked') ? 1 : 0,
            'index': $('#index-name').val() || $('#field-name').val()
        };
        if ($('#field-parent').val().length > 0) {
            data.parent = $('#field-parent').val();
        }
        switch ($('.indexing-option.active').attr('id')) {
            case 'indexing-property':
                if ($('#field-indexdatatype').val() === 'text') {
                    data.type = 'text';
                } else {
                    data.type = 'property';
                    data.datatype = $('#field-indexdatatype').val();
                    data.unique = document.querySelector('#field-indexunique').checked;
                    data.multivalue = document.querySelector('#field-indexmultivalue').checked;
                }
                break;
            case 'indexing-edge':
                switch ($('.edge-type.active').attr('id')) {
                    case 'field-edgeregular':
                        data.type = 'edge';
                        break;
                    case 'field-edgeunidirected':
                        data.type = 'uniedge';
                        break;
                    case 'field-edgeinverse':
                        data.type = 'inverseedge';
                        data.edge = $('#field-masteredge').val();
                        break;
                    case 'field-edgeboth':
                        data.type = 'biedge';
                        break;
                }
                break;
            case 'indexing-other':
                data.type = $('#field-indexothertype').val();
                break;
        }
        $.ajax({
            url: '/fields/' + $('#field-schema').val() + '/' + $('#field-name').val(),
            type: "POST",
            dataType: "json",
            data: data
        }).done(function (data) {
            History.replaceState({ 'event' : 'save', 'id' : data.id }, 'Field - ' + data.label, '/admin/fields/' + data.schema + '/' + data.name);
            $('#tree .selected').each(function() {
                $(this).parent().attr('data-id', data.id);
                $(this).attr('href', '/admin/fields/' + data.schema + '/' + data.name);
            });
            $('#saveField').removeClass('field-changed');
        });
        return false;
    });
    $('#saveLinks').click(function() {
    });
});

function showIndex(data) {
    data.type = data.type || '';
    switch (data.type) {
    case 'property':
        $('#property-selector').click();
        $('#field-indexdatatype').val(data.datatype);
        break;
    case 'text':
        $('#property-selector').click();
        $('#field-indexdatatype').val('text');
        break;
    case 'edge':
        $('#edge-selector').click();
        $('#field-edgeregular').click();
        break;
    case 'inverseedge':
        $('#edge-selector').click();
        $('#field-edgeinverse').click();
        $('#field-masteredge').val(data.edge);
        break;
    case 'biedge':
        $('#edge-selector').click();
        $('#field-edgeboth').click();
        break;
    case 'uniedge':
        $('#edge-selector').click();
        $('#field-edgeunidirected').click();
        break;
    case '':
        $('#unindexed-selector').click();
        break;
    default:
        $('#other-selector').click();
        break;
    }
}

function showRecord(data, fieldParent) {
    window.renderer.render(data, 'field-editor', function (newEditor) {
        document.querySelector('#fieldeditor').innerHTML = newEditor;
        if (typeof fieldParent !== 'undefined') {
            $('#field-parent').val(fieldParent);
        }
        showIndex(data);
        initializeStyleEditor();
    });
}
</script>
{{/contentFor}}
